//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RFIDTest.IntegrationtoNAV {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExchangeRequest", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class ExchangeRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BCCompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppVersionField;
        
        private int VersionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FriendlyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SqlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SqlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BCResourceField;
        
        private bool IsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RFIDTest.IntegrationtoNAV.SQLParameterPair[] SQLParameterPairsField;
        
        private int PartitionNumberField;
        
        private int PartitionSetField;
        
        private bool ZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Base64EncodedStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string BCCompanyId {
            get {
                return this.BCCompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BCCompanyIdField, value) != true)) {
                    this.BCCompanyIdField = value;
                    this.RaisePropertyChanged("BCCompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string ZoneCode {
            get {
                return this.ZoneCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneCodeField, value) != true)) {
                    this.ZoneCodeField = value;
                    this.RaisePropertyChanged("ZoneCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIDField, value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string AppVersion {
            get {
                return this.AppVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.AppVersionField, value) != true)) {
                    this.AppVersionField = value;
                    this.RaisePropertyChanged("AppVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public int VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((this.VersionNumberField.Equals(value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string DeviceDescription {
            get {
                return this.DeviceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceDescriptionField, value) != true)) {
                    this.DeviceDescriptionField = value;
                    this.RaisePropertyChanged("DeviceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string ProjectKey {
            get {
                return this.ProjectKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectKeyField, value) != true)) {
                    this.ProjectKeyField = value;
                    this.RaisePropertyChanged("ProjectKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string FriendlyName {
            get {
                return this.FriendlyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendlyNameField, value) != true)) {
                    this.FriendlyNameField = value;
                    this.RaisePropertyChanged("FriendlyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string SqlType {
            get {
                return this.SqlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SqlTypeField, value) != true)) {
                    this.SqlTypeField = value;
                    this.RaisePropertyChanged("SqlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string Sql {
            get {
                return this.SqlField;
            }
            set {
                if ((object.ReferenceEquals(this.SqlField, value) != true)) {
                    this.SqlField = value;
                    this.RaisePropertyChanged("Sql");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string BCResource {
            get {
                return this.BCResourceField;
            }
            set {
                if ((object.ReferenceEquals(this.BCResourceField, value) != true)) {
                    this.BCResourceField = value;
                    this.RaisePropertyChanged("BCResource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public bool IsCount {
            get {
                return this.IsCountField;
            }
            set {
                if ((this.IsCountField.Equals(value) != true)) {
                    this.IsCountField = value;
                    this.RaisePropertyChanged("IsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public RFIDTest.IntegrationtoNAV.SQLParameterPair[] SQLParameterPairs {
            get {
                return this.SQLParameterPairsField;
            }
            set {
                if ((object.ReferenceEquals(this.SQLParameterPairsField, value) != true)) {
                    this.SQLParameterPairsField = value;
                    this.RaisePropertyChanged("SQLParameterPairs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public int PartitionNumber {
            get {
                return this.PartitionNumberField;
            }
            set {
                if ((this.PartitionNumberField.Equals(value) != true)) {
                    this.PartitionNumberField = value;
                    this.RaisePropertyChanged("PartitionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public int PartitionSet {
            get {
                return this.PartitionSetField;
            }
            set {
                if ((this.PartitionSetField.Equals(value) != true)) {
                    this.PartitionSetField = value;
                    this.RaisePropertyChanged("PartitionSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public bool Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((this.ZipField.Equals(value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=23)]
        public string OperationName {
            get {
                return this.OperationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationNameField, value) != true)) {
                    this.OperationNameField = value;
                    this.RaisePropertyChanged("OperationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=24)]
        public string XML {
            get {
                return this.XMLField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLField, value) != true)) {
                    this.XMLField = value;
                    this.RaisePropertyChanged("XML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=25)]
        public string Base64EncodedString {
            get {
                return this.Base64EncodedStringField;
            }
            set {
                if ((object.ReferenceEquals(this.Base64EncodedStringField, value) != true)) {
                    this.Base64EncodedStringField = value;
                    this.RaisePropertyChanged("Base64EncodedString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SQLParameterPair", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RFIDTest.IntegrationtoNAV.ExchangeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RFIDTest.IntegrationtoNAV.SQLParameterPair[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RFIDTest.IntegrationtoNAV.ExchangeResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RFIDTest.IntegrationtoNAV.ArrayOfString))]
    public partial class SQLParameterPair : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExchangeResponse", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class ExchangeResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        private bool MustUpgradeField;
        
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XAMLInfoDocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeInfoNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SQLFieldHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RFIDTest.IntegrationtoNAV.ArrayOfString SQLResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SQLSingleResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SQLFlatResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SQLZippedResultField;
        
        private char SQLFieldSeperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XAMLContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JSONResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool MustUpgrade {
            get {
                return this.MustUpgradeField;
            }
            set {
                if ((this.MustUpgradeField.Equals(value) != true)) {
                    this.MustUpgradeField = value;
                    this.RaisePropertyChanged("MustUpgrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string MessageText {
            get {
                return this.MessageTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTextField, value) != true)) {
                    this.MessageTextField = value;
                    this.RaisePropertyChanged("MessageText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string XAMLInfoDocumentType {
            get {
                return this.XAMLInfoDocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.XAMLInfoDocumentTypeField, value) != true)) {
                    this.XAMLInfoDocumentTypeField = value;
                    this.RaisePropertyChanged("XAMLInfoDocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string DocumentTypeInfoName {
            get {
                return this.DocumentTypeInfoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeInfoNameField, value) != true)) {
                    this.DocumentTypeInfoNameField = value;
                    this.RaisePropertyChanged("DocumentTypeInfoName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string SQLFieldHeader {
            get {
                return this.SQLFieldHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.SQLFieldHeaderField, value) != true)) {
                    this.SQLFieldHeaderField = value;
                    this.RaisePropertyChanged("SQLFieldHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public RFIDTest.IntegrationtoNAV.ArrayOfString SQLResult {
            get {
                return this.SQLResultField;
            }
            set {
                if ((object.ReferenceEquals(this.SQLResultField, value) != true)) {
                    this.SQLResultField = value;
                    this.RaisePropertyChanged("SQLResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string SQLSingleResult {
            get {
                return this.SQLSingleResultField;
            }
            set {
                if ((object.ReferenceEquals(this.SQLSingleResultField, value) != true)) {
                    this.SQLSingleResultField = value;
                    this.RaisePropertyChanged("SQLSingleResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string SQLFlatResult {
            get {
                return this.SQLFlatResultField;
            }
            set {
                if ((object.ReferenceEquals(this.SQLFlatResultField, value) != true)) {
                    this.SQLFlatResultField = value;
                    this.RaisePropertyChanged("SQLFlatResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public byte[] SQLZippedResult {
            get {
                return this.SQLZippedResultField;
            }
            set {
                if ((object.ReferenceEquals(this.SQLZippedResultField, value) != true)) {
                    this.SQLZippedResultField = value;
                    this.RaisePropertyChanged("SQLZippedResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public char SQLFieldSeperator {
            get {
                return this.SQLFieldSeperatorField;
            }
            set {
                if ((this.SQLFieldSeperatorField.Equals(value) != true)) {
                    this.SQLFieldSeperatorField = value;
                    this.RaisePropertyChanged("SQLFieldSeperator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string XAMLContent {
            get {
                return this.XAMLContentField;
            }
            set {
                if ((object.ReferenceEquals(this.XAMLContentField, value) != true)) {
                    this.XAMLContentField = value;
                    this.RaisePropertyChanged("XAMLContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string JSONResult {
            get {
                return this.JSONResultField;
            }
            set {
                if ((object.ReferenceEquals(this.JSONResultField, value) != true)) {
                    this.JSONResultField = value;
                    this.RaisePropertyChanged("JSONResult");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://tempuri.org/", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IntegrationtoNAV.IntegrationtoNAVSoap")]
    public interface IntegrationtoNAVSoap {
        
        // CODEGEN: Generating message contract since element name request from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.LoginResponse Login(RFIDTest.IntegrationtoNAV.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.LoginResponse> LoginAsync(RFIDTest.IntegrationtoNAV.LoginRequest request);
        
        // CODEGEN: Generating message contract since element name request from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Logout", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.LogoutResponse Logout(RFIDTest.IntegrationtoNAV.LogoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Logout", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.LogoutResponse> LogoutAsync(RFIDTest.IntegrationtoNAV.LogoutRequest request);
        
        // CODEGEN: Generating message contract since element name request from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangePassword", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.ChangePasswordResponse ChangePassword(RFIDTest.IntegrationtoNAV.ChangePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangePassword", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.ChangePasswordResponse> ChangePasswordAsync(RFIDTest.IntegrationtoNAV.ChangePasswordRequest request);
        
        // CODEGEN: Generating message contract since element name request from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SignUp", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.SignUpResponse SignUp(RFIDTest.IntegrationtoNAV.SignUpRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SignUp", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.SignUpResponse> SignUpAsync(RFIDTest.IntegrationtoNAV.SignUpRequest request);
        
        // CODEGEN: Generating message contract since element name request from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTable", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.GetTableResponse GetTable(RFIDTest.IntegrationtoNAV.GetTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTable", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.GetTableResponse> GetTableAsync(RFIDTest.IntegrationtoNAV.GetTableRequest request);
        
        // CODEGEN: Generating message contract since element name request from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSingleResult", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.GetSingleResultResponse GetSingleResult(RFIDTest.IntegrationtoNAV.GetSingleResultRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSingleResult", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.GetSingleResultResponse> GetSingleResultAsync(RFIDTest.IntegrationtoNAV.GetSingleResultRequest request);
        
        // CODEGEN: Generating message contract since element name request from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OCRImage", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.OCRImageResponse OCRImage(RFIDTest.IntegrationtoNAV.OCRImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OCRImage", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.OCRImageResponse> OCRImageAsync(RFIDTest.IntegrationtoNAV.OCRImageRequest request);
        
        // CODEGEN: Generating message contract since element name request from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendtoNAVService", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.SendtoNAVServiceResponse SendtoNAVService(RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendtoNAVService", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.SendtoNAVServiceResponse> SendtoNAVServiceAsync(RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequest request);
        
        // CODEGEN: Generating message contract since element name request from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnResult", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.ReturnResultResponse ReturnResult(RFIDTest.IntegrationtoNAV.ReturnResultRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReturnResult", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.ReturnResultResponse> ReturnResultAsync(RFIDTest.IntegrationtoNAV.ReturnResultRequest request);
        
        // CODEGEN: Generating message contract since element name request from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.UpdateResponse Update(RFIDTest.IntegrationtoNAV.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.UpdateResponse> UpdateAsync(RFIDTest.IntegrationtoNAV.UpdateRequest request);
        
        // CODEGEN: Generating message contract since element name APIKEY from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendRFID", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.SendRFIDResponse SendRFID(RFIDTest.IntegrationtoNAV.SendRFIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendRFID", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.SendRFIDResponse> SendRFIDAsync(RFIDTest.IntegrationtoNAV.SendRFIDRequest request);
        
        // CODEGEN: Generating message contract since element name APIKEY from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPalletInfo", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.GetPalletInfoResponse GetPalletInfo(RFIDTest.IntegrationtoNAV.GetPalletInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPalletInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.GetPalletInfoResponse> GetPalletInfoAsync(RFIDTest.IntegrationtoNAV.GetPalletInfoRequest request);
        
        // CODEGEN: Generating message contract since element name APIKEY from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsOrderPosted", ReplyAction="*")]
        RFIDTest.IntegrationtoNAV.IsOrderPostedResponse IsOrderPosted(RFIDTest.IntegrationtoNAV.IsOrderPostedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsOrderPosted", ReplyAction="*")]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.IsOrderPostedResponse> IsOrderPostedAsync(RFIDTest.IntegrationtoNAV.IsOrderPostedRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Login", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.LoginRequestBody Body;
        
        public LoginRequest() {
        }
        
        public LoginRequest(RFIDTest.IntegrationtoNAV.LoginRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class LoginRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeRequest request;
        
        public LoginRequestBody() {
        }
        
        public LoginRequestBody(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LoginResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.LoginResponseBody Body;
        
        public LoginResponse() {
        }
        
        public LoginResponse(RFIDTest.IntegrationtoNAV.LoginResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class LoginResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse LoginResult;
        
        public LoginResponseBody() {
        }
        
        public LoginResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse LoginResult) {
            this.LoginResult = LoginResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogoutRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Logout", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.LogoutRequestBody Body;
        
        public LogoutRequest() {
        }
        
        public LogoutRequest(RFIDTest.IntegrationtoNAV.LogoutRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class LogoutRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeRequest request;
        
        public LogoutRequestBody() {
        }
        
        public LogoutRequestBody(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogoutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogoutResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.LogoutResponseBody Body;
        
        public LogoutResponse() {
        }
        
        public LogoutResponse(RFIDTest.IntegrationtoNAV.LogoutResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class LogoutResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse LogoutResult;
        
        public LogoutResponseBody() {
        }
        
        public LogoutResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse LogoutResult) {
            this.LogoutResult = LogoutResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePasswordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangePassword", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.ChangePasswordRequestBody Body;
        
        public ChangePasswordRequest() {
        }
        
        public ChangePasswordRequest(RFIDTest.IntegrationtoNAV.ChangePasswordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ChangePasswordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeRequest request;
        
        public ChangePasswordRequestBody() {
        }
        
        public ChangePasswordRequestBody(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePasswordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangePasswordResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.ChangePasswordResponseBody Body;
        
        public ChangePasswordResponse() {
        }
        
        public ChangePasswordResponse(RFIDTest.IntegrationtoNAV.ChangePasswordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ChangePasswordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse ChangePasswordResult;
        
        public ChangePasswordResponseBody() {
        }
        
        public ChangePasswordResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse ChangePasswordResult) {
            this.ChangePasswordResult = ChangePasswordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SignUpRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SignUp", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.SignUpRequestBody Body;
        
        public SignUpRequest() {
        }
        
        public SignUpRequest(RFIDTest.IntegrationtoNAV.SignUpRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SignUpRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeRequest request;
        
        public SignUpRequestBody() {
        }
        
        public SignUpRequestBody(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SignUpResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SignUpResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.SignUpResponseBody Body;
        
        public SignUpResponse() {
        }
        
        public SignUpResponse(RFIDTest.IntegrationtoNAV.SignUpResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SignUpResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse SignUpResult;
        
        public SignUpResponseBody() {
        }
        
        public SignUpResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse SignUpResult) {
            this.SignUpResult = SignUpResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTable", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.GetTableRequestBody Body;
        
        public GetTableRequest() {
        }
        
        public GetTableRequest(RFIDTest.IntegrationtoNAV.GetTableRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetTableRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeRequest request;
        
        public GetTableRequestBody() {
        }
        
        public GetTableRequestBody(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTableResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.GetTableResponseBody Body;
        
        public GetTableResponse() {
        }
        
        public GetTableResponse(RFIDTest.IntegrationtoNAV.GetTableResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetTableResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse GetTableResult;
        
        public GetTableResponseBody() {
        }
        
        public GetTableResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse GetTableResult) {
            this.GetTableResult = GetTableResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSingleResultRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSingleResult", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.GetSingleResultRequestBody Body;
        
        public GetSingleResultRequest() {
        }
        
        public GetSingleResultRequest(RFIDTest.IntegrationtoNAV.GetSingleResultRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetSingleResultRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeRequest request;
        
        public GetSingleResultRequestBody() {
        }
        
        public GetSingleResultRequestBody(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSingleResultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSingleResultResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.GetSingleResultResponseBody Body;
        
        public GetSingleResultResponse() {
        }
        
        public GetSingleResultResponse(RFIDTest.IntegrationtoNAV.GetSingleResultResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetSingleResultResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse GetSingleResultResult;
        
        public GetSingleResultResponseBody() {
        }
        
        public GetSingleResultResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse GetSingleResultResult) {
            this.GetSingleResultResult = GetSingleResultResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OCRImageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="OCRImage", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.OCRImageRequestBody Body;
        
        public OCRImageRequest() {
        }
        
        public OCRImageRequest(RFIDTest.IntegrationtoNAV.OCRImageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class OCRImageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeRequest request;
        
        public OCRImageRequestBody() {
        }
        
        public OCRImageRequestBody(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OCRImageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="OCRImageResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.OCRImageResponseBody Body;
        
        public OCRImageResponse() {
        }
        
        public OCRImageResponse(RFIDTest.IntegrationtoNAV.OCRImageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class OCRImageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse OCRImageResult;
        
        public OCRImageResponseBody() {
        }
        
        public OCRImageResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse OCRImageResult) {
            this.OCRImageResult = OCRImageResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendtoNAVServiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendtoNAVService", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequestBody Body;
        
        public SendtoNAVServiceRequest() {
        }
        
        public SendtoNAVServiceRequest(RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SendtoNAVServiceRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeRequest request;
        
        public SendtoNAVServiceRequestBody() {
        }
        
        public SendtoNAVServiceRequestBody(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendtoNAVServiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendtoNAVServiceResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.SendtoNAVServiceResponseBody Body;
        
        public SendtoNAVServiceResponse() {
        }
        
        public SendtoNAVServiceResponse(RFIDTest.IntegrationtoNAV.SendtoNAVServiceResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SendtoNAVServiceResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse SendtoNAVServiceResult;
        
        public SendtoNAVServiceResponseBody() {
        }
        
        public SendtoNAVServiceResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse SendtoNAVServiceResult) {
            this.SendtoNAVServiceResult = SendtoNAVServiceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReturnResultRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReturnResult", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.ReturnResultRequestBody Body;
        
        public ReturnResultRequest() {
        }
        
        public ReturnResultRequest(RFIDTest.IntegrationtoNAV.ReturnResultRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ReturnResultRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeRequest request;
        
        public ReturnResultRequestBody() {
        }
        
        public ReturnResultRequestBody(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReturnResultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReturnResultResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.ReturnResultResponseBody Body;
        
        public ReturnResultResponse() {
        }
        
        public ReturnResultResponse(RFIDTest.IntegrationtoNAV.ReturnResultResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ReturnResultResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse ReturnResultResult;
        
        public ReturnResultResponseBody() {
        }
        
        public ReturnResultResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse ReturnResultResult) {
            this.ReturnResultResult = ReturnResultResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Update", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.UpdateRequestBody Body;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(RFIDTest.IntegrationtoNAV.UpdateRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeRequest request;
        
        public UpdateRequestBody() {
        }
        
        public UpdateRequestBody(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.UpdateResponseBody Body;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(RFIDTest.IntegrationtoNAV.UpdateResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse UpdateResult;
        
        public UpdateResponseBody() {
        }
        
        public UpdateResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse UpdateResult) {
            this.UpdateResult = UpdateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendRFIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendRFID", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.SendRFIDRequestBody Body;
        
        public SendRFIDRequest() {
        }
        
        public SendRFIDRequest(RFIDTest.IntegrationtoNAV.SendRFIDRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SendRFIDRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string APIKEY;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string projectName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string operationName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string values;
        
        public SendRFIDRequestBody() {
        }
        
        public SendRFIDRequestBody(string APIKEY, string projectName, string operationName, string values) {
            this.APIKEY = APIKEY;
            this.projectName = projectName;
            this.operationName = operationName;
            this.values = values;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendRFIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendRFIDResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.SendRFIDResponseBody Body;
        
        public SendRFIDResponse() {
        }
        
        public SendRFIDResponse(RFIDTest.IntegrationtoNAV.SendRFIDResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class SendRFIDResponseBody {
        
        public SendRFIDResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPalletInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPalletInfo", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.GetPalletInfoRequestBody Body;
        
        public GetPalletInfoRequest() {
        }
        
        public GetPalletInfoRequest(RFIDTest.IntegrationtoNAV.GetPalletInfoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetPalletInfoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string APIKEY;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string projectName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string palletNo;
        
        public GetPalletInfoRequestBody() {
        }
        
        public GetPalletInfoRequestBody(string APIKEY, string projectName, string palletNo) {
            this.APIKEY = APIKEY;
            this.projectName = projectName;
            this.palletNo = palletNo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPalletInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPalletInfoResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.GetPalletInfoResponseBody Body;
        
        public GetPalletInfoResponse() {
        }
        
        public GetPalletInfoResponse(RFIDTest.IntegrationtoNAV.GetPalletInfoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetPalletInfoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse GetPalletInfoResult;
        
        public GetPalletInfoResponseBody() {
        }
        
        public GetPalletInfoResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse GetPalletInfoResult) {
            this.GetPalletInfoResult = GetPalletInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsOrderPostedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsOrderPosted", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.IsOrderPostedRequestBody Body;
        
        public IsOrderPostedRequest() {
        }
        
        public IsOrderPostedRequest(RFIDTest.IntegrationtoNAV.IsOrderPostedRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class IsOrderPostedRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string APIKEY;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string projectName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string orderNo;
        
        public IsOrderPostedRequestBody() {
        }
        
        public IsOrderPostedRequestBody(string APIKEY, string projectName, string orderNo) {
            this.APIKEY = APIKEY;
            this.projectName = projectName;
            this.orderNo = orderNo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsOrderPostedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsOrderPostedResponse", Namespace="http://tempuri.org/", Order=0)]
        public RFIDTest.IntegrationtoNAV.IsOrderPostedResponseBody Body;
        
        public IsOrderPostedResponse() {
        }
        
        public IsOrderPostedResponse(RFIDTest.IntegrationtoNAV.IsOrderPostedResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class IsOrderPostedResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public RFIDTest.IntegrationtoNAV.ExchangeResponse IsOrderPostedResult;
        
        public IsOrderPostedResponseBody() {
        }
        
        public IsOrderPostedResponseBody(RFIDTest.IntegrationtoNAV.ExchangeResponse IsOrderPostedResult) {
            this.IsOrderPostedResult = IsOrderPostedResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IntegrationtoNAVSoapChannel : RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IntegrationtoNAVSoapClient : System.ServiceModel.ClientBase<RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap>, RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap {
        
        public IntegrationtoNAVSoapClient() {
        }
        
        public IntegrationtoNAVSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IntegrationtoNAVSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IntegrationtoNAVSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IntegrationtoNAVSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.LoginResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.Login(RFIDTest.IntegrationtoNAV.LoginRequest request) {
            return base.Channel.Login(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse Login(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.LoginRequest inValue = new RFIDTest.IntegrationtoNAV.LoginRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.LoginRequestBody();
            inValue.Body.request = request;
            RFIDTest.IntegrationtoNAV.LoginResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).Login(inValue);
            return retVal.Body.LoginResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.LoginResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.LoginAsync(RFIDTest.IntegrationtoNAV.LoginRequest request) {
            return base.Channel.LoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.LoginResponse> LoginAsync(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.LoginRequest inValue = new RFIDTest.IntegrationtoNAV.LoginRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.LoginRequestBody();
            inValue.Body.request = request;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).LoginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.LogoutResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.Logout(RFIDTest.IntegrationtoNAV.LogoutRequest request) {
            return base.Channel.Logout(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse Logout(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.LogoutRequest inValue = new RFIDTest.IntegrationtoNAV.LogoutRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.LogoutRequestBody();
            inValue.Body.request = request;
            RFIDTest.IntegrationtoNAV.LogoutResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).Logout(inValue);
            return retVal.Body.LogoutResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.LogoutResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.LogoutAsync(RFIDTest.IntegrationtoNAV.LogoutRequest request) {
            return base.Channel.LogoutAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.LogoutResponse> LogoutAsync(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.LogoutRequest inValue = new RFIDTest.IntegrationtoNAV.LogoutRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.LogoutRequestBody();
            inValue.Body.request = request;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).LogoutAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.ChangePasswordResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.ChangePassword(RFIDTest.IntegrationtoNAV.ChangePasswordRequest request) {
            return base.Channel.ChangePassword(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse ChangePassword(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.ChangePasswordRequest inValue = new RFIDTest.IntegrationtoNAV.ChangePasswordRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.ChangePasswordRequestBody();
            inValue.Body.request = request;
            RFIDTest.IntegrationtoNAV.ChangePasswordResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).ChangePassword(inValue);
            return retVal.Body.ChangePasswordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.ChangePasswordResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.ChangePasswordAsync(RFIDTest.IntegrationtoNAV.ChangePasswordRequest request) {
            return base.Channel.ChangePasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.ChangePasswordResponse> ChangePasswordAsync(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.ChangePasswordRequest inValue = new RFIDTest.IntegrationtoNAV.ChangePasswordRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.ChangePasswordRequestBody();
            inValue.Body.request = request;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).ChangePasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.SignUpResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.SignUp(RFIDTest.IntegrationtoNAV.SignUpRequest request) {
            return base.Channel.SignUp(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse SignUp(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.SignUpRequest inValue = new RFIDTest.IntegrationtoNAV.SignUpRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.SignUpRequestBody();
            inValue.Body.request = request;
            RFIDTest.IntegrationtoNAV.SignUpResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).SignUp(inValue);
            return retVal.Body.SignUpResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.SignUpResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.SignUpAsync(RFIDTest.IntegrationtoNAV.SignUpRequest request) {
            return base.Channel.SignUpAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.SignUpResponse> SignUpAsync(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.SignUpRequest inValue = new RFIDTest.IntegrationtoNAV.SignUpRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.SignUpRequestBody();
            inValue.Body.request = request;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).SignUpAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.GetTableResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.GetTable(RFIDTest.IntegrationtoNAV.GetTableRequest request) {
            return base.Channel.GetTable(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse GetTable(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.GetTableRequest inValue = new RFIDTest.IntegrationtoNAV.GetTableRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.GetTableRequestBody();
            inValue.Body.request = request;
            RFIDTest.IntegrationtoNAV.GetTableResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).GetTable(inValue);
            return retVal.Body.GetTableResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.GetTableResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.GetTableAsync(RFIDTest.IntegrationtoNAV.GetTableRequest request) {
            return base.Channel.GetTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.GetTableResponse> GetTableAsync(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.GetTableRequest inValue = new RFIDTest.IntegrationtoNAV.GetTableRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.GetTableRequestBody();
            inValue.Body.request = request;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).GetTableAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.GetSingleResultResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.GetSingleResult(RFIDTest.IntegrationtoNAV.GetSingleResultRequest request) {
            return base.Channel.GetSingleResult(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse GetSingleResult(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.GetSingleResultRequest inValue = new RFIDTest.IntegrationtoNAV.GetSingleResultRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.GetSingleResultRequestBody();
            inValue.Body.request = request;
            RFIDTest.IntegrationtoNAV.GetSingleResultResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).GetSingleResult(inValue);
            return retVal.Body.GetSingleResultResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.GetSingleResultResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.GetSingleResultAsync(RFIDTest.IntegrationtoNAV.GetSingleResultRequest request) {
            return base.Channel.GetSingleResultAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.GetSingleResultResponse> GetSingleResultAsync(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.GetSingleResultRequest inValue = new RFIDTest.IntegrationtoNAV.GetSingleResultRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.GetSingleResultRequestBody();
            inValue.Body.request = request;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).GetSingleResultAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.OCRImageResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.OCRImage(RFIDTest.IntegrationtoNAV.OCRImageRequest request) {
            return base.Channel.OCRImage(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse OCRImage(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.OCRImageRequest inValue = new RFIDTest.IntegrationtoNAV.OCRImageRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.OCRImageRequestBody();
            inValue.Body.request = request;
            RFIDTest.IntegrationtoNAV.OCRImageResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).OCRImage(inValue);
            return retVal.Body.OCRImageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.OCRImageResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.OCRImageAsync(RFIDTest.IntegrationtoNAV.OCRImageRequest request) {
            return base.Channel.OCRImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.OCRImageResponse> OCRImageAsync(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.OCRImageRequest inValue = new RFIDTest.IntegrationtoNAV.OCRImageRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.OCRImageRequestBody();
            inValue.Body.request = request;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).OCRImageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.SendtoNAVServiceResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.SendtoNAVService(RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequest request) {
            return base.Channel.SendtoNAVService(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse SendtoNAVService(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequest inValue = new RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequestBody();
            inValue.Body.request = request;
            RFIDTest.IntegrationtoNAV.SendtoNAVServiceResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).SendtoNAVService(inValue);
            return retVal.Body.SendtoNAVServiceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.SendtoNAVServiceResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.SendtoNAVServiceAsync(RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequest request) {
            return base.Channel.SendtoNAVServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.SendtoNAVServiceResponse> SendtoNAVServiceAsync(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequest inValue = new RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.SendtoNAVServiceRequestBody();
            inValue.Body.request = request;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).SendtoNAVServiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.ReturnResultResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.ReturnResult(RFIDTest.IntegrationtoNAV.ReturnResultRequest request) {
            return base.Channel.ReturnResult(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse ReturnResult(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.ReturnResultRequest inValue = new RFIDTest.IntegrationtoNAV.ReturnResultRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.ReturnResultRequestBody();
            inValue.Body.request = request;
            RFIDTest.IntegrationtoNAV.ReturnResultResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).ReturnResult(inValue);
            return retVal.Body.ReturnResultResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.ReturnResultResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.ReturnResultAsync(RFIDTest.IntegrationtoNAV.ReturnResultRequest request) {
            return base.Channel.ReturnResultAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.ReturnResultResponse> ReturnResultAsync(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.ReturnResultRequest inValue = new RFIDTest.IntegrationtoNAV.ReturnResultRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.ReturnResultRequestBody();
            inValue.Body.request = request;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).ReturnResultAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.UpdateResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.Update(RFIDTest.IntegrationtoNAV.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse Update(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.UpdateRequest inValue = new RFIDTest.IntegrationtoNAV.UpdateRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.UpdateRequestBody();
            inValue.Body.request = request;
            RFIDTest.IntegrationtoNAV.UpdateResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).Update(inValue);
            return retVal.Body.UpdateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.UpdateResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.UpdateAsync(RFIDTest.IntegrationtoNAV.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.UpdateResponse> UpdateAsync(RFIDTest.IntegrationtoNAV.ExchangeRequest request) {
            RFIDTest.IntegrationtoNAV.UpdateRequest inValue = new RFIDTest.IntegrationtoNAV.UpdateRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.UpdateRequestBody();
            inValue.Body.request = request;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).UpdateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.SendRFIDResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.SendRFID(RFIDTest.IntegrationtoNAV.SendRFIDRequest request) {
            return base.Channel.SendRFID(request);
        }
        
        public void SendRFID(string APIKEY, string projectName, string operationName, string values) {
            RFIDTest.IntegrationtoNAV.SendRFIDRequest inValue = new RFIDTest.IntegrationtoNAV.SendRFIDRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.SendRFIDRequestBody();
            inValue.Body.APIKEY = APIKEY;
            inValue.Body.projectName = projectName;
            inValue.Body.operationName = operationName;
            inValue.Body.values = values;
            RFIDTest.IntegrationtoNAV.SendRFIDResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).SendRFID(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.SendRFIDResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.SendRFIDAsync(RFIDTest.IntegrationtoNAV.SendRFIDRequest request) {
            return base.Channel.SendRFIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.SendRFIDResponse> SendRFIDAsync(string APIKEY, string projectName, string operationName, string values) {
            RFIDTest.IntegrationtoNAV.SendRFIDRequest inValue = new RFIDTest.IntegrationtoNAV.SendRFIDRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.SendRFIDRequestBody();
            inValue.Body.APIKEY = APIKEY;
            inValue.Body.projectName = projectName;
            inValue.Body.operationName = operationName;
            inValue.Body.values = values;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).SendRFIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.GetPalletInfoResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.GetPalletInfo(RFIDTest.IntegrationtoNAV.GetPalletInfoRequest request) {
            return base.Channel.GetPalletInfo(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse GetPalletInfo(string APIKEY, string projectName, string palletNo) {
            RFIDTest.IntegrationtoNAV.GetPalletInfoRequest inValue = new RFIDTest.IntegrationtoNAV.GetPalletInfoRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.GetPalletInfoRequestBody();
            inValue.Body.APIKEY = APIKEY;
            inValue.Body.projectName = projectName;
            inValue.Body.palletNo = palletNo;
            RFIDTest.IntegrationtoNAV.GetPalletInfoResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).GetPalletInfo(inValue);
            return retVal.Body.GetPalletInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.GetPalletInfoResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.GetPalletInfoAsync(RFIDTest.IntegrationtoNAV.GetPalletInfoRequest request) {
            return base.Channel.GetPalletInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.GetPalletInfoResponse> GetPalletInfoAsync(string APIKEY, string projectName, string palletNo) {
            RFIDTest.IntegrationtoNAV.GetPalletInfoRequest inValue = new RFIDTest.IntegrationtoNAV.GetPalletInfoRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.GetPalletInfoRequestBody();
            inValue.Body.APIKEY = APIKEY;
            inValue.Body.projectName = projectName;
            inValue.Body.palletNo = palletNo;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).GetPalletInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RFIDTest.IntegrationtoNAV.IsOrderPostedResponse RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.IsOrderPosted(RFIDTest.IntegrationtoNAV.IsOrderPostedRequest request) {
            return base.Channel.IsOrderPosted(request);
        }
        
        public RFIDTest.IntegrationtoNAV.ExchangeResponse IsOrderPosted(string APIKEY, string projectName, string orderNo) {
            RFIDTest.IntegrationtoNAV.IsOrderPostedRequest inValue = new RFIDTest.IntegrationtoNAV.IsOrderPostedRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.IsOrderPostedRequestBody();
            inValue.Body.APIKEY = APIKEY;
            inValue.Body.projectName = projectName;
            inValue.Body.orderNo = orderNo;
            RFIDTest.IntegrationtoNAV.IsOrderPostedResponse retVal = ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).IsOrderPosted(inValue);
            return retVal.Body.IsOrderPostedResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.IsOrderPostedResponse> RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap.IsOrderPostedAsync(RFIDTest.IntegrationtoNAV.IsOrderPostedRequest request) {
            return base.Channel.IsOrderPostedAsync(request);
        }
        
        public System.Threading.Tasks.Task<RFIDTest.IntegrationtoNAV.IsOrderPostedResponse> IsOrderPostedAsync(string APIKEY, string projectName, string orderNo) {
            RFIDTest.IntegrationtoNAV.IsOrderPostedRequest inValue = new RFIDTest.IntegrationtoNAV.IsOrderPostedRequest();
            inValue.Body = new RFIDTest.IntegrationtoNAV.IsOrderPostedRequestBody();
            inValue.Body.APIKEY = APIKEY;
            inValue.Body.projectName = projectName;
            inValue.Body.orderNo = orderNo;
            return ((RFIDTest.IntegrationtoNAV.IntegrationtoNAVSoap)(this)).IsOrderPostedAsync(inValue);
        }
    }
}
